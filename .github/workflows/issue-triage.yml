name: Issue Triage

on:
  issues:
    types: [labeled]

jobs:
  issue-creation:
    runs-on: ${{ matrix.os }}
    env:
      TERM: xterm
    strategy:
      matrix:
        os:
          - ubuntu-20.04
        tag-mappings: [{
          bug: issue-transfer,
          trill: tronic
        }]
    steps:
      - name: Get Issue Labels
        id: issue-labels
        uses: actions/github-script@v5
        with:
          script: |
            const labels = [];
            const issueLabels = context.payload.issue.labels;
            for (const label of issueLabels) {
              labels.push(label.name)
            }
            return labels;
      - name: Verify Tag
        id: verify-tag
        uses: actions/github-script@v5
        with:
          script: |
            const labels = ${{ steps.issue-labels.outputs.result }};
            if (labels.length) {
              const mappings = ${{ toJson(matrix.tag-mappings) }};
              Object.entries(mappings).forEach(([key, value]) => {
                  if (labels.includes(key)) {
                    return value;
                  }
              });
            }
            return '';
          result-encoding: string
      - name: check 
        run: echo "${{steps.verify-tag.outputs.result}}"
      - name: Transfer Issue
        uses: actions/github-script@v5
        if: ${{ github.event.issue.state == 'open' }}
        with:
          github-token: ${{ secrets.TRANSFER_ISSUE_TOKEN }}
          script: |
            github.rest.issues.create({
              owner: 'thinktandem',
              repo: 'issue-transfer',
              title: context.payload.issue.title,
              body: context.payload.issue.body,
              assignees: [ context.payload.issue.user.login ]
            })
      - name: Close Current Issue
        uses: actions/github-script@v5
        if: ${{ github.event.issue.state == 'open' }}
        with:
          github-token: ${{ secrets.TRANSFER_ISSUE_TOKEN }}
          script: |
            github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed'
            })