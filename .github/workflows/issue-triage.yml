name: Issue Triage

on:
  issues:
    types: [labeled]

jobs:
  issue-creation:
    runs-on: ${{ matrix.os }}
    env:
      TERM: xterm
    strategy:
      matrix:
        os:
          - ubuntu-20.04
        tag-mappings: {
          bug: issue-transfer,
          trill: tronic
        }
    steps:
      - name: Verify Tag
        id: verify-tag
        uses: actions/github-script@v5
        with:
          script: |
            const label = context.payload.label.name;
            const mappings = ${{ toJson(matrix.tag-mappings) }};
            for (const [key, value] of Object.entries(mappings)) {
              if (label == key) {
                return value;
              }
            }
            return '';
          result-encoding: string
      - name: Check if Triage Label Needs to be Created
        uses: actions/github-script@v5
        if: steps.verify-tag.outputs.result != '' && github.event.issue.state == 'open'
        with:
          github-token: ${{ secrets.TRANSFER_ISSUE_TOKEN }}
          script: |
            const labels = github.rest.issues.listLabelsForRepo({
              owner: context.repo.owner,
              repo: `${{ steps.verify-tag.outputs.result }}`,
            });
            console.log(labels);

      - name: Transfer Issue
        id: transfer-issue
        uses: actions/github-script@v5
        if: steps.verify-tag.outputs.result != '' && github.event.issue.state == 'open'
        with:
          github-token: ${{ secrets.TRANSFER_ISSUE_TOKEN }}
          script: |
            const labels = [];
            const issueLabels = context.payload.issue.labels;
            for (const label of issueLabels) {
              labels.push(label.name)
            }
            let newIssue = github.rest.issues.create({
              owner: context.repo.owner,
              repo: `${{ steps.verify-tag.outputs.result }}`,
              title: context.payload.issue.title,
              body: context.payload.issue.body,
              labels: ['needs-triage'],
              assignees: [ context.payload.issue.user.login ]
            });
            return newIssue;
      - name: Close and Comment on Current Issue
        uses: actions/github-script@v5
        if: steps.verify-tag.outputs.result != '' && github.event.issue.state == 'open'
        with:
          github-token: ${{ secrets.TRANSFER_ISSUE_TOKEN }}
          script: |
            const newIssue = ${{ steps.transfer-issue.outputs.result }};
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `@${context.payload.issue.user.login} issue has been moved to [${newIssue.data.html_url}](${newIssue.data.html_url})`
            });
            github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'closed'
            });